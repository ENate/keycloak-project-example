# https://quarkus.io/version/2.7/guides/opentelemetry#run-the-application
services:

  acme-otel-collector:
    build:
      context: "../../../config/stage/dev/tls"
      dockerfile: "../../../../deployments/local/dev/otel-collector/Dockerfile"
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "13133:13133" # Health_check extension
      - "4317:4317"   # OTLP gRPC receiver
    volumes:
      - ../../../config/stage/dev/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml:z
    extra_hosts:
      - "ops.acme.test:${DOCKER_HOST_IP:-172.17.0.1}"

  acme-jaeger:
    image: jaegertracing/jaeger:2.5.0
    ports:
      - "16686:16686"
      - "14317:14317"
      - "14318:14318"
    extra_hosts:
      - "ops.acme.test:${DOCKER_HOST_IP:-172.17.0.1}"

  acme-keycloak:
    env_file:
      - ./keycloak-tracing.env

    environment:
      # -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/opt/keycloak/conf/jmxremote.password
#      JAVA_TOOL_OPTIONS: '-javaagent:/opt/keycloak/opentelemetry-javaagent.jar -Dotel.javaagent.debug=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8790 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -XX:FlightRecorderOptions=stackdepth=256'
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://ops.acme.test:4317'
