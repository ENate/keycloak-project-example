realm: acme-apps
enabled: true
displayName: Acme Apps
displayNameHtml: Acme Apps
loginWithEmailAllowed: true
registrationAllowed: true
registrationEmailAsUsername: false
#loginTheme: apps
loginTheme: internal-modern
#accountTheme: keycloak
#adminTheme: keycloak
emailTheme: internal-modern
internationalizationEnabled: true
supportedLocales: ["en","de"]
defaultLocale: "en"
sslRequired: $(env:SSL_REQUIRED:-EXTERNAL)
browserFlow: "browser"
registrationFlow: "Custom Registration"

# Custom realm attributes
attributes:
  # for http variant: http://apps.acme.test:4000
  "acme_site_url": "https://apps.acme.test:4443"
  "acme_terms_url": "https://apps.acme.test:4443/site/terms.html"
  "acme_imprint_url": "https://apps.acme.test:4443/site/imprint.html"
  "acme_privacy_url": "https://apps.acme.test:4443/site/privacy.html"
  #"acme_logo_url": "no example, should be taken from client or null"
  "acme_account_deleted_url": "https://apps.acme.test:4443/site/accountdeleted.html"

  friendlyCaptchaEnabled: "false"
  # register your own friendly captcha app at https://friendlycaptcha.com/
  friendlyCaptchaSiteKey: $(env:FRIENDLY_CAPTCHA_SITE_KEY:-DUMMY)
  friendlyCaptchaSecret: $(env:FRIENDLY_CAPTCHA_SECRET:-DUMMY)
  friendlyCaptchaStart: "auto"
  friendlyCaptchaSolutionFieldName: "frc-captcha-solution"
  friendlyCaptchaSourceModule: "https://cdn.jsdelivr.net/npm/friendly-challenge@0.9.10/widget.module.min.js"
  friendlyCaptchaSourceNoModule: "https://cdn.jsdelivr.net/npm/friendly-challenge@0.9.10/widget.polyfilled.min.js"

smtpServer:
  replyToDisplayName: "Acme APPS Support"
  port: 1025
  host: mail
  replyTo: "no-reply@acme.test"
  from: "acme-apps-sso@local"
  fromDisplayName: "Acme APPS Account"

clientScopes:
  - name: acme.profile
    description: Acme Profile Access
    protocol: openid-connect
  - name: acme.api
    description: Acme API Access
    protocol: openid-connect
  - name: acme.ageinfo
    description: Acme Profile AgeInfo
    protocol: openid-connect
    protocolMappers:
      - name: "Acme: Audience Resolve"
        protocol: openid-connect
        protocolMapper: oidc-audience-resolve-mapper
        consentRequired: false
      - name: "Acme: AgeInfo"
        protocol: openid-connect
        protocolMapper: oidc-acme-ageinfo-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          id.token.claim: "true"
          access.token.claim: "false"
  - name: name
    description: Name Details
    protocol: openid-connect
    protocolMappers:
      - name: "Acme: Given Name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "firstName"
          "claim.name": "given_name"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Family Name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "lastName"
          "claim.name": "family_name"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Display Name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "username"
          "claim.name": "preferred_username"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
clients:
  - clientId: app-minispa
    protocol: openid-connect
    name: Acme Account Console
    description: "Acme Account Console Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: true
    rootUrl: "$(env:APPS_FRONTEND_URL_MINISPA)"
    baseUrl: "/?realm=acme-apps&show=profile,settings,apps,logout"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "http://localhost:4000/acme-account/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "basic"
      - "email"
      - "roles"
      - "profile"
    optionalClientScopes:
      - "acme.profile"
      - "phone"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

  - clientId: app-greetme
    protocol: openid-connect
    name: Acme Greet Me
    description: "App Greet Me Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: false
    rootUrl: "$(env:APPS_FRONTEND_URL_GREETME)"
    baseUrl: "/?realm=acme-apps"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "http://localhost:4000/acme-greetme/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "basic"
      - "email"
    optionalClientScopes:
      - "phone"
      - "name"
    attributes:
      "post.logout.redirect.uris": "+"

identityProviders:
  - alias: "idp-acme-internal"
    displayName: "Acme Internal Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
#    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "1000"
      issuer: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal"
      tokenUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/token"
      jwksUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/certs"
      userInfoUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/userinfo"
      authorizationUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/auth"
      logoutUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/logout"
      clientId: "acme_internal_idp_broker"
      clientSecret: "$(env:ACME_APPS_INTERNAL_IDP_BROKER_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceMethod: "S256"
      pkceEnabled: "true"

  - alias: idp-acme-saml
    displayName: Acme SAML Login
    providerId: saml
    enabled: true
    updateProfileFirstLoginMode: 'on'
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    config:
      validateSignature: 'true'
      hideOnLoginPage: false
      guiOrder: "2000"
      # Note this singing certificate must match the 'custom-rsa-generated' in acme-saml.yaml
      signingCertificate: "MIIClzCCAX8CBgF/0OmrYzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARkZW1vMB4XDTIyMDMyODE0MjIyOVoXDTMyMDMyODE0MjQwOVowDzENMAsGA1UEAwwEZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMOVGgrZfj96C5zNhlzLi8KWXoqVYq2ZWlH5mykT55FSvwC5m5/Px63VOzxuNWDAyGz8Uq9lUa5ED2D10W/e72AIbEC0w2F9z91cyElitsr/uQoI3snCJjLchXMez50u0J/g/78tfhv1ICo6EhPzupMBWwl+Liw1fiUv54pLPVM1r450fcQxaVX/jZszzZgLrtzbQz73uoUHJ6QJ7N2wz5c+sG3iy9OyVQl+uI0dIs9RFc57UUOURw2lOPgAPErKnckV5gEDQ16C07EvjVzzv1Q6SE2FIVN4F65qSRQ1iXU2uI0rdNTOkju5WNJylsmp8dfJE8HiOwjQ8ArZ/nTAgukCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAcDoujUldX1HiCjPjLrcUaY+LNCSsGWeN7g/lI7z18sxg3VlhsPz2Bg5m4zZCFVcrTPax1PuNqYIxetR9fEP8N+8GHLTnd4KrGvE6rH8xwDDk3GET5QKHnaUDUoxdOND85d65oL20NDIHaNDP+Kw/XIktV30mTKZerkDpxJSC9101RDwVhH3zpr0t4CYTnnR6NTBNkVRfDl19Nia98KpbSJizIw2y0zC8wubJzFnBoWbXv1AXOqTZUR2pyP742YJNA/9NFg4+EDbW/ZJVaajY+UVN8ImCj1T32f78189d3NFoCX81pBkmRv8YfXetZgDcofuKKTkUmFlP55x5S32Vmw=="
      postBindingLogout: 'true'
      nameIDPolicyFormat: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
      postBindingResponse: 'true'
      principalAttribute: "username"
      singleLogoutServiceUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-saml/protocol/saml"
      entityId: acme_saml_idp_broker
      backchannelSupported: 'true'
      signatureAlgorithm: RSA_SHA256
      xmlSigKeyInfoKeyNameTransformer: KEY_ID
      loginHint: 'true'
      authnContextComparisonType: exact
      postBindingAuthnRequest: 'true'
      syncMode: FORCE
      singleSignOnServiceUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-saml/protocol/saml"
      wantAuthnRequestsSigned: 'true'
      addExtensionsElementWithKeyInfo: 'false'
      principalType: SUBJECT

  - alias: "idp-acme-ldap"
    displayName: "Acme LDAP Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      hideOnLoginPage: true
      guiOrder: "3000"
      issuer: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap"
      tokenUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap/protocol/openid-connect/token"
      jwksUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap/protocol/openid-connect/certs"
      userInfoUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap/protocol/openid-connect/userinfo"
      authorizationUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap/protocol/openid-connect/auth"
      logoutUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-ldap/protocol/openid-connect/logout"
      clientId: "acme_ldap_idp_broker"
      clientSecret: "$(env:ACME_APPS_LDAP_IDP_BROKER_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceMethod: "S256"
      pkceEnabled: "true"

  - alias: "idp-acme-azuread"
    displayName: "Acme EntraID Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: true
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "4000"
      issuer: "$(env:ACME_AZURE_AAD_TENANT_URL)/v2.0"
      tokenUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/token"
      jwksUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/discovery/v2.0/keys"
      userInfoUrl: "https://graph.microsoft.com/oidc/userinfo"
      authorizationUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/authorize"
      logoutUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/logout"
      clientId: "$(env:ACME_AZURE_AAD_TENANT_CLIENT_ID:-dummy)"
      clientSecret: "$(env:ACME_AZURE_AAD_TENANT_CLIENT_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid profile email"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceMethod: "S256"
      pkceEnabled: "true"

  - alias: "Google"
    displayName: "Acme Google Login"
    providerId: "google"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "5000"
      syncMode: IMPORT
      userIp: true
      clientSecret: dummysecret
      clientId: dummyclientid
      useJwksUrl: true

  - alias: "auth0"
    displayName: "Acme Auth0 Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
#    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "1000"
      issuer: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/"
      tokenUrl: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/oauth/token"
      jwksUrl: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/.well-known/jwks.json"
      userInfoUrl: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/userinfo"
      authorizationUrl: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/authorize"
      logoutUrl: "https://$(env:ACME_AUTH0_DOMAIN:-dummy.eu).auth0.com/v2/logout"
      clientId: "$(env:ACME_AUTH0_CLIENT_ID:-dummy)"
      clientSecret: "$(env:ACME_AUTH0_CLIENT_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid profile email"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceEnabled: "true"
      pkceMethod: "S256"

  - alias: "Okta"
    displayName: "Acme Okta Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      # https://mydomain.okta.com/.well-known/openid-configuration
      guiOrder: "2000"
      issuer: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com"
      tokenUrl: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com/oauth2/v1/token"
      jwksUrl: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com/oauth2/v1/keys"
      userInfoUrl: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com/oauth2/v1/userinfo"
      authorizationUrl: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com/oauth2/v1/authorize"
      logoutUrl: "https://$(env:ACME_OKTA_DOMAIN:-dummy).$(env:OKTA_DOMAIN:-okta).com/oauth2/v1/logout"
      clientId: "$(env:ACME_OKTA_CLIENT_ID:-dummy)"
      clientSecret: "$(env:ACME_OKTA_CLIENT_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid profile email"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceEnabled: "true"
      pkceMethod: "S256"

  - alias: "linkedin"
    providerId: "linkedin-openid-connect"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    # also uses acme-idp-mapper-linkedin-user-importer, see identityProviderMappers
    config:
      guiOrder: "6000"
      syncMode: "FORCE"
      clientId: "$(env:ACME_LINKEDIN_IDP_CLIENT_ID:-dummy)"
      clientSecret: "$(env:ACME_LINKEDIN_IDP_CLIENT_SECRET:-dummysecret)"
      # see https://learn.microsoft.com/en-us/linkedin/shared/references/v2/profile/lite-profile
      defaultScope: "openid email profile"
      acceptsPromptNoneForwardFromClient: "false"
      disableUserInfo: "false"
      filteredByClaim: "false"
      hideOnLoginPage: "false"
      # see also https://www.linkedin.com/oauth/.well-known/openid-configuration
      # see https://learn.microsoft.com/en-us/linkedin/shared/integrations/people/profile-api
      # profileProjection not supported by new linkedin-openid-connect provider
      # profileProjection: "(id,firstName,lastName,profilePicture(displayImage~digitalmediaAsset:playableStreams))"

identityProviderMappers:
  - name: lastname-importer
    identityProviderAlias: idp-acme-saml
    identityProviderMapper: saml-user-attribute-idp-mapper
    config:
      syncMode: FORCE
      user.attribute: lastName
      attributes: "[]"
      attribute.friendly.name: surname
  - name: firstname-importer
    identityProviderAlias: idp-acme-saml
    identityProviderMapper: saml-user-attribute-idp-mapper
    config:
      syncMode: FORCE
      user.attribute: firstName
      attributes: "[]"
      attribute.friendly.name: givenName
  - name: "linkedin-profile-importer"
    identityProviderAlias: "linkedin"
    identityProviderMapper: "acme-idp-mapper-linkedin-user-importer"
    config:
      syncMode: "FORCE"

authenticationFlows:
  ## Custom User Registration Flow
  - alias: "Custom Registration"
    description: "Custom User Registration"
    providerId: "basic-flow"
    topLevel: true
    builtIn: false
    authenticationExecutions:
      - authenticator: "registration-page-form"
        requirement: REQUIRED
        flowAlias: "Custom Registration Forms"
        autheticatorFlow: true

  - alias: "Custom Registration Forms"
    description: "registration form"
    providerId: "form-flow"
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: "custom-registration-user-creation"
        requirement: "REQUIRED"
        userSetupAllowed: false
        autheticatorFlow: false
      - authenticator: "acme-friendly-captcha-form-action"
        requirement: "DISABLED"
        userSetupAllowed: false
        autheticatorFlow: false
      - authenticator: "registration-password-action"
        requirement: "REQUIRED"
        userSetupAllowed: false
        autheticatorFlow: false

  - alias: "Custom Post Broker Login"
    description: "Custom Post Broker Login with logging"
    providerId: "basic-flow"
    topLevel: true
    builtIn: false
    authenticationExecutions:
      - authenticator: "acme-debug-auth"
        requirement: "REQUIRED"
        authenticatorConfig: "acme-debug-auth-post-broker"
        userSetupAllowed: true

authenticatorConfig:
  - alias: "acme-debug-auth-post-broker"
    config: {}

# deploy123